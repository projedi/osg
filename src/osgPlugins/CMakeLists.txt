#---------------------------------------------------
# OSG CMAKE SUPPORT
# (C) by Michael Wagner, mtw@shared-reality.com 2005
# (C) Eric Wing, Luigi Calori and Robert Osfield 2006-2007
#---------------------------------------------------

PROJECT(OSG_PLUGINS_MASTER)

IF(NOT DYNAMIC_OPENSCENEGRAPH)
    ADD_DEFINITIONS(-DOSG_LIBRARY_STATIC)
ENDIF()

IF(NOT MSVC)
    SET(LIBRARY_OUTPUT_PATH "${LIBRARY_OUTPUT_PATH}/${OSG_PLUGINS}")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${OSG_PLUGINS}")
ENDIF()

SET(CMAKE_SHARED_MODULE_PREFIX ${OSG_PLUGIN_PREFIX})

IF(MSVC80 OR MSVC90)
    IF(NOT OSG_MSVC_GENERATE_PLUGINS_AND_WRAPPERS_MANIFESTS)
        SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO")
    ENDIF()
ENDIF()

SET(TARGET_DEFAULT_PREFIX "osgdb_")
SET(TARGET_DEFAULT_LABEL_PREFIX "Plugins")
SET(TARGET_COMMON_LIBRARIES
    OpenThreads
    osg
    osgDB
    osgUtil
)

option(OSG_NO_BUILD_ALL_PLUGINS "" OFF)

############################################################
#
#  NodeKit/Psudo loader plugins
#
option(OSG_BUILD_PLUGIN_OSGA "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OSGA)
	ADD_SUBDIRECTORY(osga)
endif()
option(OSG_BUILD_PLUGIN_ROT "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_ROT)
	ADD_SUBDIRECTORY(rot)
endif()
option(OSG_BUILD_PLUGIN_SCALE "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_SCALE)
	ADD_SUBDIRECTORY(scale)
endif()
option(OSG_BUILD_PLUGIN_TRANS "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TRANS)
	ADD_SUBDIRECTORY(trans)
endif()
option(OSG_BUILD_PLUGIN_NORMALS "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_NORMALS)
	ADD_SUBDIRECTORY(normals)
endif()
option(OSG_BUILD_PLUGIN_REVISIONS "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_REVISIONS)
	ADD_SUBDIRECTORY(revisions)
endif()
option(OSG_BUILD_PLUGIN_VIEW "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_VIEW)
	ADD_SUBDIRECTORY(view)
endif()
option(OSG_BUILD_PLUGIN_SHADOW "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_SHADOW)
	ADD_SUBDIRECTORY(shadow)
endif()
option(OSG_BUILD_PLUGIN_TERRAIN "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TERRAIN)
	ADD_SUBDIRECTORY(terrain)
endif()

############################################################
#
#  Main native plugins
#
option(OSG_BUILD_PLUGIN_OSG "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OSG)
	ADD_SUBDIRECTORY(osg)
endif()
option(OSG_BUILD_PLUGIN_IVE "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_IVE)
	ADD_SUBDIRECTORY(ive)
endif()

############################################################
#
#  Viewer plugins
#
option(OSG_BUILD_PLUGIN_CFG "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_CFG)
	ADD_SUBDIRECTORY(cfg)
endif()

############################################################
#
#  Shader plugins
#
option(OSG_BUILD_PLUGIN_GLSL "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_GLSL)
	ADD_SUBDIRECTORY(glsl)
endif()

############################################################
#
#  Image plugins
#
option(OSG_BUILD_PLUGIN_RGB "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_RGB)
	ADD_SUBDIRECTORY(rgb)
endif()
option(OSG_BUILD_PLUGIN_BMP "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_BMP)
	ADD_SUBDIRECTORY(bmp)
endif()
option(OSG_BUILD_PLUGIN_PNM "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PNM)
	ADD_SUBDIRECTORY(pnm)
endif()
option(OSG_BUILD_PLUGIN_DDS "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DDS)
	ADD_SUBDIRECTORY(dds)
endif()
option(OSG_BUILD_PLUGIN_TGA "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TGA)
	ADD_SUBDIRECTORY(tga)
endif()
option(OSG_BUILD_PLUGIN_HDR "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_HDR)
	ADD_SUBDIRECTORY(hdr)
endif()
option(OSG_BUILD_PLUGIN_DOT "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DOT)
	ADD_SUBDIRECTORY(dot)
endif()
option(OSG_BUILD_PLUGIN_VTF "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_VTF)
	ADD_SUBDIRECTORY(vtf)
endif()
option(OSG_BUILD_PLUGIN_KTX "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_KTX)
	ADD_SUBDIRECTORY(ktx)
endif()

option(OSG_BUILD_PLUGIN_JPEG "" OFF)
IF(JPEG_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_JPEG))
    ADD_SUBDIRECTORY(jpeg)
ENDIF()
option(OSG_BUILD_PLUGIN_JP2 "" OFF)
IF(JASPER_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_JP2))
    ADD_SUBDIRECTORY(jp2)
ENDIF()
option(OSG_BUILD_PLUGIN_EXR "" OFF)
IF(OPENEXR_FOUND AND ZLIB_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_EXR))
    ADD_SUBDIRECTORY(exr)
ENDIF()
option(OSG_BUILD_PLUGIN_GIF "" OFF)
IF(GIFLIB_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_GIF))
    ADD_SUBDIRECTORY(gif)
ENDIF()
option(OSG_BUILD_PLUGIN_PNG "" OFF)
IF(PNG_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PNG))
    ADD_SUBDIRECTORY(png)
ENDIF()
option(OSG_BUILD_PLUGIN_TIFF "" OFF)
IF(TIFF_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TIFF))
    ADD_SUBDIRECTORY(tiff)
ENDIF()
option(OSG_BUILD_PLUGIN_GDAL "" OFF)
IF(GDAL_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_GDAL))
    ADD_SUBDIRECTORY(gdal)
ENDIF()
option(OSG_BUILD_PLUGIN_OGR "" OFF)
IF(GDAL_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OGR))
    ADD_SUBDIRECTORY(ogr)
ENDIF()
option(OSG_BUILD_PLUGIN_GTA "" OFF)
IF(GTA_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_GTA))
    ADD_SUBDIRECTORY(gta)
ENDIF()


############################################################
#
# 3D Image plugins
#
option(OSG_BUILD_PLUGIN_DICOM "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DICOM)
	IF(DCMTK_FOUND AND ZLIB_FOUND)
		 ADD_SUBDIRECTORY(dicom)
	ELSE()
		 IF(ITK_FOUND)
			  ADD_SUBDIRECTORY(dicom)
		 ENDIF()
	ENDIF()
endif()

############################################################
#
#  3rd party 3d plugins
#

option(OSG_BUILD_PLUGIN_3DC "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_3DC)
	ADD_SUBDIRECTORY(3dc)
endif()

option(OSG_BUILD_PLUGIN_P3D "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_P3D)
	ADD_SUBDIRECTORY(p3d)
endif()

option(OSG_BUILD_PLUGIN_CURL "" OFF)
IF(CURL_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_CURL))
    ADD_SUBDIRECTORY(curl)
ENDIF()

option(OSG_BUILD_PLUGIN_GZ "" OFF)
IF(ZLIB_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_GZ))
    ADD_SUBDIRECTORY(gz)
ENDIF()

IF(NOT OSG_GLES1_AVAILABLE AND NOT OSG_GLES2_AVAILABLE)
	 option(OSG_BUILD_PLUGIN_INVENTOR "" OFF)
	 IF(INVENTOR_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_INVENTOR))
        ADD_SUBDIRECTORY(Inventor)
    ENDIF()

	 option(OSG_BUILD_PLUGIN_PFB "" OFF)
	 IF(PERFORMER_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PFB))
        ADD_SUBDIRECTORY(pfb)
    ENDIF()
ENDIF()

option(OSG_BUILD_PLUGIN_VRML "" OFF)
IF(OPENVRML_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_VRML))
    ADD_SUBDIRECTORY(vrml)
ENDIF()

option(OSG_BUILD_PLUGIN_DAE "" OFF)
IF(COLLADA_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DAE))
    ADD_SUBDIRECTORY(dae)
ENDIF()

option(OSG_BUILD_PLUGIN_FBX "" OFF)
IF(FBX_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_FBX))
    ADD_SUBDIRECTORY(fbx)
ENDIF()

option(OSG_BUILD_PLUGIN_DW "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DW)
	ADD_SUBDIRECTORY(dw)
endif()

option(OSG_BUILD_PLUGIN_BVH "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_BVH)
	ADD_SUBDIRECTORY(bvh)
endif()
option(OSG_BUILD_PLUGIN_X "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_X)
	ADD_SUBDIRECTORY(x)
endif()
option(OSG_BUILD_PLUGIN_DXF "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DXF)
	ADD_SUBDIRECTORY(dxf)
endif()
option(OSG_BUILD_PLUGIN_OPENFLIGHT "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OPENFLIGHT)
	ADD_SUBDIRECTORY(OpenFlight)
endif()

option(OSG_BUILD_PLUGIN_OBJ "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OBJ)
	ADD_SUBDIRECTORY(obj)
endif()

option(OSG_BUILD_PLUGIN_PIC "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PIC)
	ADD_SUBDIRECTORY(pic)
endif()
option(OSG_BUILD_PLUGIN_STL "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_STL)
	ADD_SUBDIRECTORY(stl)
endif()
option(OSG_BUILD_PLUGIN_3DS "" OFF)
IF(NOT ANDROID AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_3DS))
    ADD_SUBDIRECTORY(3ds)
ENDIF()
option(OSG_BUILD_PLUGIN_AC "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_AC)
	ADD_SUBDIRECTORY(ac)
endif()
option(OSG_BUILD_PLUGIN_POV "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_POV)
	ADD_SUBDIRECTORY(pov)
endif()

option(OSG_BUILD_PLUGIN_LOGO "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_LOGO)
	ADD_SUBDIRECTORY(logo)
endif()
option(OSG_BUILD_PLUGIN_LWS "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_LWS)
	ADD_SUBDIRECTORY(lws)
endif()
option(OSG_BUILD_PLUGIN_MD2 "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_MD2)
	ADD_SUBDIRECTORY(md2)
endif()
option(OSG_BUILD_PLUGIN_OSGTGZ "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OSGTGZ)
	ADD_SUBDIRECTORY(osgtgz)
endif()
option(OSG_BUILD_PLUGIN_TGZ "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TGZ)
	ADD_SUBDIRECTORY(tgz)
endif()

option(OSG_BUILD_PLUGIN_SHP "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_SHP)
	ADD_SUBDIRECTORY(shp)
endif()
option(OSG_BUILD_PLUGIN_TXF "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TXF)
	ADD_SUBDIRECTORY(txf)
endif()

option(OSG_BUILD_PLUGIN_BSP "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_BSP)
	ADD_SUBDIRECTORY(bsp)
endif()
option(OSG_BUILD_PLUGIN_MDL "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_MDL)
	ADD_SUBDIRECTORY(mdl)
endif()

IF(OSG_CPP_EXCEPTIONS_AVAILABLE)
	 option(OSG_BUILD_PLUGIN_LWO "" OFF)
	 if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_LWO)
    	ADD_SUBDIRECTORY(lwo)
    endif()
	 option(OSG_BUILD_PLUGIN_PLY "" OFF)
	 if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PLY)
    	ADD_SUBDIRECTORY(ply)
 	 endif()
	 option(OSG_BUILD_PLUGIN_TXP "" OFF)
	 if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TXP)
    	ADD_SUBDIRECTORY(txp)
    endif()
ENDIF()

option(OSG_BUILD_PLUGIN_XINE "" OFF)
IF(XINE_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_XINE))
    ADD_SUBDIRECTORY(xine)
ENDIF()

option(OSG_BUILD_PLUGIN_FFMPEG "" OFF)
IF(FFMPEG_FOUND AND OSG_CPP_EXCEPTIONS_AVAILABLE AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_FFMPEG))
    ADD_SUBDIRECTORY(ffmpeg)
ENDIF()

option(OSG_BUILD_PLUGIN_DIRECTSHOW "" OFF)
IF(DIRECTSHOW_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_DIRECTSHOW))
    ADD_SUBDIRECTORY(directshow)
ENDIF()

# IF(OPENAL_FOUND)
#    ADD_SUBDIRECTORY(OpenAL)
# ENDIF()

option(OSG_BUILD_PLUGIN_IMAGEIO "" OFF)
IF(APPLE AND NOT ANDROID AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_IMAGEIO))
    ADD_SUBDIRECTORY(imageio)
ENDIF()

option(OSG_BUILD_PLUGIN_AVFOUNDATION "" OFF)
IF(AV_FOUNDATION_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_AVFOUNDATION))
    ADD_SUBDIRECTORY(avfoundation)
ENDIF()

option(OSG_BUILD_PLUGIN_QUICKTIME "" OFF)
IF(QUICKTIME_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_QUICKTIME))
    ADD_SUBDIRECTORY(quicktime)
ENDIF()

option(OSG_BUILD_PLUGIN_QTKIT "" OFF)
IF(QTKIT_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_QTKIT))
    ADD_SUBDIRECTORY(QTKit)
ENDIF()

option(OSG_BUILD_PLUGIN_NVTT "" OFF)
IF(NVTT_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_NVTT))
    ADD_SUBDIRECTORY(nvtt)
ENDIF()


option(OSG_BUILD_PLUGIN_FREETYPE "" OFF)
IF(FREETYPE_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_FREETYPE))
    ADD_SUBDIRECTORY(freetype)
ENDIF()

option(OSG_BUILD_PLUGIN_QFONT "" OFF)
IF (QT4_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_QFONT))
    ADD_SUBDIRECTORY(qfont)
ENDIF()

option(OSG_BUILD_PLUGIN_ZIP "" OFF)
IF(ZLIB_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_ZIP))
    ADD_SUBDIRECTORY(zip)
ENDIF()

option(OSG_BUILD_PLUGIN_SVG "" OFF)
IF(RSVG_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_SVG))
    ADD_SUBDIRECTORY(svg)
ENDIF()

option(OSG_BUILD_PLUGIN_PDF "" OFF)
IF(POPPLER_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PDF))
    ADD_SUBDIRECTORY(pdf)
ENDIF()

option(OSG_BUILD_PLUGIN_VNC "" OFF)
IF(LIBVNCSERVER_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_VNC))
    ADD_SUBDIRECTORY(vnc)
ENDIF()
option(OSG_BUILD_PLUGIN_PVR "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PVR)
	ADD_SUBDIRECTORY(pvr)
endif()
option(OSG_BUILD_PLUGIN_OSC "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_OSC)
	ADD_SUBDIRECTORY(osc)
endif()
option(OSG_BUILD_PLUGIN_TRK "" OFF)
if(NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_TRK)
	ADD_SUBDIRECTORY(trk)
endif()

####################################################
#
# ScriptEngines
#
option(OSG_BUILD_PLUGIN_LUA "" OFF)
IF ((LUA_LIBRARIES AND LUA_INCLUDE_DIR) OR (LUA_SOURCE_DIR AND LUA_INCLUDE_DIR) AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_LUA))
    ADD_SUBDIRECTORY(lua)
ENDIF()

option(OSG_BUILD_PLUGIN_V8 "" OFF)
IF (V8_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_V8))
    ADD_SUBDIRECTORY(V8)
ENDIF()

option(OSG_BUILD_PLUGIN_PYTHON "" OFF)
IF (PYTHONLIBS_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_PYTHON))
    ADD_SUBDIRECTORY(python)
ENDIF()

####################################################
#
# Device integration plugins
#
option(OSG_BUILD_PLUGIN_SDL "" OFF)
IF   (SDL_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_SDL))
    ADD_SUBDIRECTORY(sdl)
ENDIF(SDL_FOUND)

option(OSG_BUILD_PLUGIN_RESTHTTPDEVICE "" OFF)
IF(ASIO_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_RESTHTTPDEVICE))
    ADD_SUBDIRECTORY(RestHttpDevice)
ENDIF(ASIO_FOUND)


option(OSG_BUILD_PLUGIN_ZEROCONFDEVICE "" OFF)
IF(ZEROCONF_FOUND AND (NOT OSG_NO_BUILD_ALL_PLUGINS OR OSG_BUILD_PLUGIN_ZEROCONFDEVICE))
    ADD_SUBDIRECTORY(ZeroConfDevice)
ENDIF()

##########to get all the variables of Cmake
#GET_CMAKE_PROPERTY(MYVARS VARIABLES)
#FOREACH(myvar ${MYVARS})
#    FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/AllVariables.txt
#        "${myvar} -->${${myvar}}<-\n"
#    )
#ENDFOREACH(myvar)


